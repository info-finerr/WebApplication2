name: .NET

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Publish
        run: dotnet publish -o publish

      - name: Backup and Deploy
        shell: pwsh
        run: |
          # Variables
          $datestamp = (Get-Date).ToString("yyyyMMddHHmmss")
          $backupPath = "D:\Backup"
          $publishPath = "publish"
          $deployPath = "D:\Demo"
          $backupZip = Join-Path $backupPath "Demo_Backup_$datestamp.zip"

          # Ensure the backup directory exists
          if (!(Test-Path -Path $backupPath)) {
              New-Item -ItemType Directory -Path $backupPath
          }

          # Backup existing deployment
          if (Test-Path -Path $deployPath) {
              Compress-Archive -Path $deployPath\* -DestinationPath $backupZip
          }

          # Stop the IIS site
          Import-Module WebAdministration
          Stop-WebSite -Name 'Demo'

          # Remove old deployment files
          Remove-Item -Path $deployPath\* -Recurse -Force

          # Copy new files to the deployment folder
          Copy-Item -Path $publishPath\* -Destination $deployPath -Recurse -Force

          # Start the IIS site
          Start-WebSite -Name 'Demo'

---

### Explanation of Fixes:

1. **Backup Handling**:
   - If `D:\Backup` does not exist, it's created.
   - Compresses all contents of `D:\Demo` into a timestamped `.zip` file in the backup folder.

2. **IIS Management**:
   - Properly stops and starts the IIS website using the `WebAdministration` PowerShell module.

3. **File Management**:
   - Clears old deployment files from `D:\Demo` before copying the new build from the `publish` folder.

4. **Error Handling**:
   - Ensures that the backup and deployment steps won't fail if the folder paths do not exist initially.

5. **PowerShell Shell**:
   - Specifies `pwsh` to ensure compatibility with PowerShell Core if you're running on a modern server environment.

---

This corrected workflow should resolve your backup issue and provide a reliable deployment process. If any step fails, c
